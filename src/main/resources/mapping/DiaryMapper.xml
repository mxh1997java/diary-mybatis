<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="www.maxinhai.com.diarymybatis.mapper.DiaryMapper">

    <!--开启本mapper的namespace下的二级缓存-->
    <!--
        eviction:代表的是缓存回收策略，目前MyBatis提供以下策略。
        (1) LRU,最近最少使用的，一处最长时间不用的对象
        (2) FIFO,先进先出，按对象进入缓存的顺序来移除他们
        (3) SOFT,软引用，移除基于垃圾回收器状态和软引用规则的对象
        (4) WEAK,弱引用，更积极的移除基于垃圾收集器状态和弱引用规则的对象。这里采用的是LRU，
                移除最长时间不用的对形象

        flushInterval:刷新间隔时间，单位为毫秒，这里配置的是100秒刷新，如果你不配置它，那么当
        SQL被执行的时候才会去刷新缓存。

        size:引用数目，一个正整数，代表缓存最多可以存储多少个对象，不宜设置过大。设置过大会导致内存溢出。
        这里配置的是1024个对象

        readOnly:只读，意味着缓存数据只能读取而不能修改，这样设置的好处是我们可以快速读取缓存，缺点是我们没有
        办法修改缓存，他的默认值是false，不允许我们修改
    -->
    <cache eviction="LRU" flushInterval="100000" readOnly="true" size="1024"/>

    <resultMap id="BaseResultMap" type="www.maxinhai.com.diarymybatis.entity.Diary">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="author_id" property="author_id" jdbcType="INTEGER"/>
        <result column="author" property="author" jdbcType="VARCHAR"/>
        <result column="createTime" property="createTime" jdbcType="DATE"/>
        <result column="modifyTime" property="modifyTime" jdbcType="DATE"/>
    </resultMap>

    <!--共用查询字段-->
    <sql id="BaseColumnList">
        id,
        title,
        content,
        author_id,
        author,
        createTime,
        modifyTime
    </sql>

    <!--查询用户的全部日记-->
    <!--可以通过设置useCache来规定这个sql是否开启缓存，ture是开启，false是关闭-->
    <select id="findAllByCondition"
            parameterType="java.util.Map"
            resultType="www.maxinhai.com.diarymybatis.entity.Diary" useCache="true">
        select
        <include refid="BaseColumnList"></include>
        from diary_diary where 1 != 1
        <where>
            <if test="author_id != null">
                and author_id = #{author_id}
            </if>
            <if test="author != null">
                and author = #{author}
            </if>
        </where>
    </select>

    <!--根据日记id查询出一条数据-->
    <select id="findOneDiaryById" resultType="www.maxinhai.com.diarymybatis.entity.Diary">
        select
        <include refid="BaseColumnList"></include>
        from diary_diary where id=#{id}
    </select>
    
    <select id="findOneByCondition" parameterType="java.util.Map" resultType="www.maxinhai.com.diarymybatis.entity.Diary">
        select
        <include refid="BaseColumnList"></include>
        from diary_diary where 0>1
        <if test="id != null">
            and id = #{id}
        </if>
        <if test="title != null">
            and title = #{title}
        </if>
        <if test="author_id != null">
            and author_id = #{author_id}
        </if>
        <if test="author != null">
            and author = #{author}
        </if>
    </select>

    <!--添加日记信息-->
    <insert id="addDiary"
            parameterType="www.maxinhai.com.diarymybatis.entity.Diary"
            useGeneratedKeys="true" keyProperty="id" >
        insert into diary_diary
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="title != null">
                title,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="author_id != null">
                author_id,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="createTime != null">
                createTime,
            </if>
            <if test="modifyTime != null">
                modifyTime,
            </if>
            <if test="description != null">
                description,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="author_id != null">
                #{author_id,jdbcType=INTEGER},
            </if>
            <if test="author != null">
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=DATE},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=DATE},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <!--修改日记信息你-->
    <update id="updateDiaryById" parameterType="www.maxinhai.com.diarymybatis.entity.Diary">
        update diary_diary
        <set>
            <if test="title != null">
                name = #{title,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="author_id != null">
                author_id = #{author_id,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                createTime = #{createTime,jdbcType=DATE},
            </if>
            <if test="modifyTime != null">
                modifyTime = #{modifyTime,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
        </set>
        where id=#{id}
    </update>

    <!--删除日记信息-->
    <delete id="deleteDiaryById" parameterType="java.lang.Long">
        delete from diary_diary where id=#{id}
    </delete>

    <insert id ="batchInsertDiary" parameterType="java.util.List" >
        insert into diary_diary
        (bach_id, code, type, facevalue,create_user,create_time)
        values
        <foreach collection ="list" item="diary" index= "index" separator =",">
            (
            #{diary.id},
            #{diary.title},
            #{diary.content},
            #{diary.author_id},
            #{diary.author},
            #{diary.createTime},
            #{diary.modifyTime},
            #{diary.description}
            )
        </foreach >
    </insert >

</mapper>
